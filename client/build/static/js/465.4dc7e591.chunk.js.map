{"version":3,"file":"static/js/465.4dc7e591.chunk.js","mappings":"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","sources":["components/EventDisplayer/index.jsx","pages/commons/GEO_ZONE_POP.jsx","pages/models/FUNCTIONS_DISPATCHER.js"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport { EventContext } from '../../contexts/EventContext';\r\nimport { AlertCircle } from 'react-feather';\r\n\r\nfunction EventDisplayer() {\r\n    const { event, removeEvent } = useContext(EventContext);\r\n\r\n    const [code, setCode] = useState(\"\");\r\n\r\n    const handleSubmitCode = () => {\r\n        event.code.setSecraitaireCode(code);\r\n        removeEvent();\r\n    };\r\n\r\n    return event && <div className=\"fixed z-[9999] inset-0 overflow-y-auto roboto\">\r\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n                    <div className=\"absolute inset-0 bg-gray-900 opacity-80\"></div>\r\n                </div>\r\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                        <div className=\"sm:flex sm:items-start\">\r\n                            <div className=\"mx-auto flex-shrink-0 text-portal-600 flex items-center justify-center h-12 w-12 rounded-full bg-portal-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                                {\r\n                                    event.icon ? event.icon : <AlertCircle className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                                }\r\n                            </div>\r\n                            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                                <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\r\n                                    { event.title ? event.title : \"Message d'information\" }\r\n                                </h3>\r\n                                <div className=\"mt-2\">\r\n                                    <p className=\"text-sm leading-5 text-gray-500\">\r\n                                        { event.content ? event.content : \"Aucun message à afficher\" }\r\n                                    </p>\r\n                                </div>\r\n                                {\r\n                                    event.link?.url && <div className=\"mt-2\">\r\n                                        <a\r\n                                            href={ event.link.url } \r\n                                            className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-portal-100 text-base font-medium text-portal-800 hover:bg-portal-50 focus:outline-none transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\r\n                                            { event.link.text }\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    event.code && <div className=\"mt-2\">\r\n                                        <input\r\n                                            placeholder={event.code.text}\r\n                                            type={event.code.type}\r\n                                            id={event.code.id}\r\n                                            value={code}\r\n                                            onChange={(e) => setCode(e.target.value)}\r\n                                            className={`w-full border border-slate-300 rounded-md shadow my-1 block py-2.5 px-4 text-slate-600 focus:outline-none focus:border-portal-400`}\r\n                                        />\r\n                                        <button onClick={ handleSubmitCode } type=\"button\" className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-portal-100 text-base font-medium text-portal-800 hover:bg-portal-50 focus:outline-none transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\r\n                                            Valider\r\n                                        </button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-4 sm:px-6 sm:flex sm:flex-row-reverse bg-gray-50\">\r\n                        <span className=\"flex w-full sm:ml-3 sm:w-auto\">\r\n                            <button onClick={ removeEvent } type=\"button\" className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-portal-100 text-base font-medium text-portal-800 hover:bg-portal-50 focus:outline-none transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\r\n                                Fermer le message\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n};\r\n\r\nexport default EventDisplayer;","import { useCallback, useEffect, useState } from \"react\";\r\nimport { ArrowLeftCircle, Home, MapPin, Navigation, Users, Video } from \"react-feather\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport \"../../App.css\";\r\nimport { findNameFor, findResidentielNameFor, getAllCountries, getCountryNameFromCountryCode, getGeoZonesForCountry, getGeoZonesForResidentiels } from \"../models/FUNCTIONS_DISPATCHER\";\r\nimport \"./GEO_ZONE_POP.scss\";\r\n// import SearchLogic from \"./SearchLogic\";\r\nimport adiosLogo from \"../../img/logo-Sarah-Nacass-Jaune_Blanc-sans-fond.webp\";\r\nimport { countriesDepthOfCoverage } from \"../shared_locations_datas/LOCATIONS_DATAS\";\r\n\r\nexport default function GeoZoneSelector({ showModal , setShowModal, includesCities, imLost, inFrame }) {\r\n\r\n  const navigate = useNavigate();\r\n  const [queryParameters] = useSearchParams();\r\n  const indexT = queryParameters.get(\"index\");\r\n  let indexU = \"\";\r\n  \r\n  const [ready, setReady] = useState(false);\r\n  const [surPlace, setSurPlace] = useState(false);\r\n  const [visio, setVisio] = useState(false);\r\n  const [visioExpert, setVisioExpert] = useState(false);\r\n  const [residentiel, setResidentiel] = useState(false);\r\n  const [positions, setPositions] = useState(false);\r\n  const [residentielPositions, setResidentielPositions] = useState(false);\r\n  const [currentCountry, setCurrentCountry] = useState(\"France\");\r\n  const [country] = useState( getAllCountries() );\r\n\r\n  /* Pour pouvoir permuter l'affichage du modal */\r\n  const toogleModal = useCallback(() => { \r\n    if (imLost) return; // Si on est perdu, on ne peut pas cliquer sur le bouton\r\n    if(showModal[0] === false) {\r\n      setShowModal([true, includesCities]);\r\n    } else {\r\n      setShowModal([false, false]);\r\n    }\r\n  }, [showModal]);\r\n\r\n  useEffect(() => {\r\n    if (!showModal[0]) return;\r\n    const currentPosition = window.location.pathname.split(\"/\")[1];\r\n    if(country && currentPosition) {\r\n      const result = getCountryNameFromCountryCode(currentPosition);\r\n      if(result) {\r\n        return setCurrentCountry(result);\r\n      }\r\n    }\r\n  }, [country, showModal]);\r\n\r\n  useEffect(() => {\r\n    if (!showModal[0]) return;\r\n    const geoZones = getGeoZonesForCountry(currentCountry);\r\n    let tempPositions = geoZones.reduce((c, { path: key }) => (c[key] = (c[key] || 0) + 1, c), {})\r\n    const updatedPositions = Object.entries(tempPositions);\r\n    setPositions(updatedPositions);\r\n  }, [showModal, currentCountry]);\r\n  \r\n  useEffect(() => {\r\n    if (!showModal[0]) return;\r\n    const geoZones = getGeoZonesForResidentiels();\r\n    let tempPositions = geoZones.reduce((c, { path: key }) => (c[key] = (c[key] || 0) + 1, c), {})\r\n    const updatedPositions = Object.entries(tempPositions);\r\n    setResidentielPositions(updatedPositions);\r\n  }, [showModal, currentCountry]);\r\n\r\n  const redirectVisio = (path, namedcountry, url) => {\r\n    \r\n    // Récupérer l'url source\r\n    const sourceParam = new URLSearchParams(window.location.search).get('source');\r\n    if (sourceParam) { localStorage.setItem('source', sourceParam); }\r\n    const gclidParam = new URLSearchParams(window.location.search).get('gclid');\r\n    if (gclidParam) { localStorage.setItem('gclid', gclidParam); }\r\n\r\n    // Envoi du pays et de la région au data layer (Visio)\r\n    window.dataLayer = window.dataLayer || [];\r\n    window.dataLayer.push({\r\n      'event': 'general',\r\n      'localisation_auto': false,\r\n      'pays': namedcountry,\r\n      'region': \"Distanciel\",\r\n      'source': sourceParam ?? undefined,\r\n    });\r\n    setShowModal([false, false]);\r\n    navigate(path + url);\r\n  }\r\n\r\n  const checkNavigate = (redirectPath, regionName) => { // Ajout de \"regionName\" en tant que deuxième argument\r\n    if (redirectPath === \"\") return;\r\n    if (inFrame) {\r\n      // We are going to create new anchor tag and redirect to the new path and click on it\r\n      const link = document.createElement(\"a\");\r\n      link.href = \"https://rdv.sarahnacass.com\" + redirectPath;\r\n      link.setAttribute('rel', 'noopener noreferrer');\r\n      link.setAttribute('target', '_blank');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      return;\r\n    }\r\n    if (window.location.href.indexOf(redirectPath) > -1) {\r\n      setShowModal([false, false]);\r\n      return;\r\n    }\r\n  \r\n    // Récupérer l'url source\r\n    const sourceParam = new URLSearchParams(window.location.search).get('source');\r\n    if (sourceParam) { localStorage.setItem('source', sourceParam); }\r\n    const gclidParam = new URLSearchParams(window.location.search).get('gclid');\r\n    if (gclidParam) { localStorage.setItem('gclid', gclidParam); }\r\n\r\n    // Envoi du pays et de la région au data layer (Sur place / Résidentiel)\r\n    if (regionName || currentCountry) {\r\n      window.dataLayer = window.dataLayer || [];\r\n      window.dataLayer.push({\r\n          'event': 'general',\r\n          'localisation_auto': false,\r\n          'pays': currentCountry,\r\n          'region': regionName,\r\n          'source': sourceParam ?? undefined,\r\n      });\r\n    }\r\n  \r\n    setShowModal([false, false]);\r\n    //Navigue avec le paramètre index précédent\r\n    navigate(redirectPath + \"?\" + createSearchParams({\r\n      index: indexT\r\n    }).toString());\r\n  };\r\n\r\n  const browserAsBuiltInGeolocator = useCallback(() => {\r\n    if (navigator.geolocation) return true;\r\n    return false;\r\n  }, []);\r\n\r\n  const modalStyle = inFrame ? \r\n    \"geomodal-modal-framed relative bg-slate-90 text-slate-900 w-full bg-slate-100 p-6 pb-0 flex flex-col overflow-y-auto\"\r\n    :\r\n    \"geomodal-modal overflow-hidden shadow-2xl relative bg-slate-90 text-slate-900 w-full bg-slate-100 max-w-sm md:max-w-md lg:max-w-lg p-3 sm:p-4 rounded-lg flex flex-col duration-150\";\r\n\r\n  const backgroundModal = inFrame ?\r\n    \"geomodal-fullscreen-framed box-border border-none\" :\r\n    \"geomodal-fullscreen box-border backdrop-blur-sm border-none p-2\"\r\n\r\n  return (\r\n    country && positions && showModal[0] && <div className={backgroundModal} onClick={toogleModal}>\r\n\r\n      {/* Sur Place */}\r\n      { surPlace && <div onClick={(e) => e.stopPropagation()} className={modalStyle} >\r\n        <div className=\"absolute bg-red-00 h-5 hidden md:block top-5 right-4\">\r\n          <img src={adiosLogo} alt=\"Sarah Nacass\" className=\"h-full\" />\r\n        </div>\r\n        <h1 className=\"flex text-slate-700 text-base font-semibold mx-1 mt-1.5 mb-2 roboto\">\r\n          <span className=\"p-1 h-6 w-6 mr-2 rounded-full relative bg-gradient-to-r cursor-pointer to-slate-700 from-slate-600\" onClick={() => { setSurPlace(false) }}>\r\n            <ArrowLeftCircle className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={16} />\r\n          </span> \r\n          { imLost ? \"Sélectionnez un lieu\" : showModal[1] ? \"Sélectionnez un lieu\" : \"Sélectionnez une zone géographique\" }\r\n        </h1>\r\n        <div className=\"flex flex-row items-center mb-1 -mx-4 px-3 py-0.5 overflow-x-auto\">\r\n          {country.map((countryName, index) => {\r\n            const style = `${countryName === currentCountry ? \"text-slate-50 bg-gradient-to-r from-slate-600 to-slate-700\" : \"text-slate-700 bg-slate-200 hover:bg-slate-300\"} text-sm shadow-md shadow-slate-300/60 rounded-full px-4 py-1.5 font-bold m-1 mx-0.5 duration-150 roboto cursor-pointer`;\r\n            return <button key={index} onClick={() => { setCurrentCountry(countryName) }} className={style}> \r\n                { countryName }\r\n              </button>\r\n          })}\r\n          { browserAsBuiltInGeolocator && <div onClick={() => checkNavigate(\"/use-auto-locate\")}\r\n            className=\"bg-gradient-to-r from-portal-500 to-fusion-500 text-white cursor-pointer duration-150 group hover:shadow-lg\r\n            text-xs roboto py-2 px-3 mr-1 font-medium flex flex-row items-center rounded-full\">\r\n              <Navigation className=\"h-3 w-3 mr-1 shrink-0\" />\r\n\r\n              <span className=\"block\">Choisir&nbsp;l'institut&nbsp;le&nbsp;plus&nbsp;proche</span>\r\n            </div>\r\n          }\r\n        </div>\r\n        <div className=\"overflow-y-auto w-full max-h-96 rounded\">\r\n          { positions.map((element, index) => {\r\n              const regionName = findNameFor(element[0]); // Récupération du nom de la région\r\n              return <div key={index} onClick={() => { checkNavigate( element[0], regionName ) }}\r\n              className=\"geomodal-select flex flex-row group relative hover:bg-gradient-to-r from-portal-500 to-fusion-600 duration-150 hover:cursor-pointer bg-white my-1 rounded py-0.5 sm:py-1 px-4 items-center\">\r\n                <div className=\"p-2 h-9 w-9 mr-2 rounded-full relative bg-portal-500 group-hover:bg-transparent\">\r\n                  <MapPin className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={19} />\r\n                </div>\r\n                <div className=\"flex flex-col p-1.5 roboto\">\r\n                  <h3 className=\"font-medium text-slate-800 textbase pb-1 group-hover:text-white\">{ findNameFor(element[0]) }</h3>\r\n                  <p className=\"text-slate-600 text-xs group-hover:text-portal-100\">{`${element[1]} établissement${ element[1] > 1 ? \"s trouvés\" : \" trouvé\" }`}</p>\r\n                </div>\r\n                <span className=\"absolute right-4 h-full text-sm items-center hidden roboto text-white group-hover:flex\">\r\n                  Continuer\r\n                </span>\r\n              </div> \r\n            }) }\r\n        </div>\r\n      </div> }\r\n      \r\n      {/* Visio Expert */}\r\n      { visioExpert && <div onClick={(e) => e.stopPropagation()} className={modalStyle} >\r\n        <div className=\"absolute bg-red-00 h-5 hidden md:block top-5 right-4\">\r\n          <img src={adiosLogo} alt=\"Oser le changement\" className=\"h-full\" />\r\n        </div>\r\n        <h1 className=\"flex text-slate-700 text-base font-semibold mx-1 mt-1.5 mb-2 roboto\">\r\n          <span className=\"p-1 h-6 w-6 mr-2 rounded-full relative bg-gradient-to-r cursor-pointer to-slate-700 from-slate-600\" onClick={() => { setVisioExpert(false) }}>\r\n            <ArrowLeftCircle className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={16} />\r\n          </span> \r\n          { imLost ? \"Sélectionnez votre pays\" : showModal[1] ? \"Sélectionnez votre pays\" : \"Sélectionnez une zone géographique\" }\r\n        </h1>\r\n        <div className=\"overflow-y-auto w-full max-h-96 rounded\">\r\n          { Object.entries(countriesDepthOfCoverage).map((nameCountry, index) => {\r\n              return <div key={index} onClick={() => { redirectVisio(nameCountry[0], nameCountry[1].name, '/visio-expert') }}\r\n              className=\"geomodal-select flex flex-row group relative hover:bg-gradient-to-r from-portal-500 to-fusion-600 duration-150 hover:cursor-pointer bg-white my-1 rounded py-0.5 sm:py-1 px-4 items-center\">\r\n                <div className=\"p-2 h-9 w-9 mr-2 rounded-full relative bg-portal-500 group-hover:bg-transparent\">\r\n                  <MapPin className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={19} />\r\n                </div>\r\n                <div className=\"flex flex-col p-1.5 roboto\">\r\n                  <h3 className=\"font-medium text-slate-800 textbase pb-1 group-hover:text-white\">{ nameCountry[1].name }</h3>\r\n                  {/* <p className=\"text-slate-600 text-xs group-hover:text-portal-100\"></p> */}\r\n                </div>\r\n                <span className=\"absolute right-4 h-full text-sm items-center hidden roboto text-white group-hover:flex\">\r\n                  Continuer\r\n                </span>\r\n              </div> \r\n            }) }\r\n        </div>\r\n      </div> }\r\n      \r\n      {/* Résidentiel */}\r\n      { residentiel && residentielPositions.map((element) => {\r\n          const regionName = findResidentielNameFor(element[0]);\r\n          return checkNavigate( element[0], regionName )\r\n      })}\r\n\r\n      {/* Visio / Sur place / Résidentiel */}\r\n      { !visio && !visioExpert && !surPlace && !residentiel && <div onClick={(e) => e.stopPropagation()} className={modalStyle} >\r\n        <div className=\"absolute bg-red-00 h-10 hidden md:block top-2 right-4\">\r\n          <img src={adiosLogo} alt=\"Sarah Nacass\" className=\"h-full\" />\r\n        </div>\r\n        <h1 className=\"flex text-slate-700 text-base font-semibold mx-1 mt-1.5 mb-2 roboto\">Sélectionnez un type de rendez-vous</h1>\r\n        <div className=\"overflow-y-auto w-full h-full rounded flex flex-col\">\r\n            {/* Visio expert */}\r\n            <div onClick={() => { setVisioExpert(true) }}\r\n              className=\"geomodal-select flex flex-row group relative hover:bg-gradient-to-r from-portal-500 to-fusion-600 duration-150 hover:cursor-pointer bg-white my-1 rounded py-0.5 sm:py-1 px-4 items-center height-select-type flex-grow\">\r\n              <div className=\"p-2 h-9 w-9 mr-2 rounded-full relative bg-portal-500 group-hover:bg-transparent\">\r\n                <Video className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={19} />\r\n              </div>\r\n              <div className=\"flex flex-col p-1.5 roboto\">\r\n                <h3 className=\"font-medium text-slate-800 textbase pb-1 group-hover:text-white\">Visio (Par ordinateur)</h3>\r\n                <p className=\"text-slate-800 text-sm pb-1 group-hover:text-white\">Avec Sarah Nacass elle-même</p>\r\n                <p className=\"text-slate-600 text-xs group-hover:text-portal-100\">75 Cabinets Sarah Nacass trouvés</p>\r\n              </div>\r\n              <span className=\"absolute right-4 h-full text-sm items-center hidden roboto text-white group-hover:flex resp\">À partir de 300€</span>\r\n            </div>\r\n            {/* Sur place */}\r\n            <div onClick={() => { setSurPlace(true) }}\r\n              className=\"geomodal-select flex flex-row group relative hover:bg-gradient-to-r from-portal-500 to-fusion-600 duration-150 hover:cursor-pointer bg-white my-1 rounded py-0.5 sm:py-1 px-4 items-center height-select-type flex-grow\">\r\n              <div className=\"p-2 h-9 w-9 mr-2 rounded-full relative bg-portal-500 group-hover:bg-transparent\">\r\n                <Users className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={19} />\r\n              </div>\r\n              <div className=\"flex flex-col p-1.5 roboto\">\r\n                <h3 className=\"font-medium text-slate-800 textbase pb-1 group-hover:text-white\">Sur place</h3>\r\n                <p className=\"text-slate-800 text-sm pb-1 group-hover:text-white\">Avec un praticien du réseau Sarah Nacass</p>\r\n                <p className=\"text-slate-600 text-xs group-hover:text-portal-100\">35 villes trouvées</p>\r\n              </div>\r\n              <span className=\"absolute right-4 h-full text-sm items-center hidden roboto text-white group-hover:flex resp\">À partir de 594€</span>\r\n            </div>\r\n            {/* Résidentiel */}\r\n            <div onClick={() => { setResidentiel(true) }}\r\n              className=\"geomodal-select flex flex-row group relative hover:bg-gradient-to-r from-portal-500 to-fusion-600 duration-150 hover:cursor-pointer bg-white my-1 rounded py-0.5 sm:py-1 px-4 items-center height-select-type flex-grow\">\r\n              <div className=\"p-2 h-9 w-9 mr-2 rounded-full relative bg-portal-500 group-hover:bg-transparent\">\r\n                <Home className=\"text-white group-hover:text-portal-700 group-hover:scale-150 duration-150 group-hover:text-white\" size={19} />\r\n              </div>\r\n              <div className=\"flex flex-col p-1.5 roboto\">\r\n                <h3 className=\"font-medium text-slate-800 textbase pb-1 group-hover:text-white\">Résidentiel</h3>\r\n                <p className=\"text-slate-800 text-sm pb-1 group-hover:text-white\">Dans le lieu de Sarah Nacass suivi par elle</p>\r\n                <p className=\"text-slate-600 text-xs group-hover:text-portal-100\">Un accompagnement unique en toute intimité</p>\r\n              </div>\r\n              <span className=\"absolute right-4 h-full text-sm items-center hidden roboto text-white group-hover:flex resp\">À partir de 99€</span>\r\n            </div>\r\n        </div>\r\n      </div> }\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n  <div onClick={ toogleModal } title=\"Fermer\"\r\n    className=\"flex bg-slate-200 rounded-full p-2 w-min absolute right-3.5 top-5\r\n    hover:cursor-pointer hover:bg-slate-300 duration-150 roboto text-sm\">\r\n      <X size={19} />\r\n  </div>\r\n*/","import { locations, countriesDepthOfCoverage, residentiel } from \"../shared_locations_datas/LOCATIONS_DATAS\";\r\nconst axios = require(\"axios\");\r\nconst isProductionEnv = process.env.NODE_ENV === \"production\" ? true : false;\r\n\r\nfunction deg_rad(deg) {\r\n  return deg * (Math.PI / 180)\r\n};\r\n\r\nfunction getDistance(lat1, lon1, lat2, lon2) {\r\n  var R = 6371; // Rayon terrestre en kilomètres\r\n  var dLat = deg_rad(lat2 - lat1); // deg_rad : fonction qui convertit des degrés en radians\r\n  var dLon = deg_rad(lon2 - lon1);\r\n  var a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg_rad(lat1)) * Math.cos(deg_rad(lat2)) *\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c; // Distance en kilomètres\r\n  return d;\r\n};\r\n\r\nconst addDispatcherToURL = (toAdd) => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  urlParams.append(\"sID\", toAdd);\r\n  return urlParams.toString();\r\n};\r\n\r\nasync function filterForEach(current) {\r\n  var positionRatings = new Array(locations.length).fill(0);\r\n\r\n  locations.forEach((position, index) => {\r\n    var res = getDistance(current[0], current[1], position.latitude, position.longitude);\r\n    var object = {\r\n      path: `${position.path}?${addDispatcherToURL(`${position.pathId}`)}&alertUserAboutDispatcherSelection=true`,\r\n      distance: res,\r\n      region: position.geoZoneName,\r\n      pays: position.country.name,\r\n      ville: position.city\r\n    };\r\n    positionRatings[index] = object;\r\n  });\r\n\r\n  const closest = positionRatings.reduce((acc, loc) =>\r\n    acc.distance < loc.distance ? acc : loc\r\n  );\r\n\r\n  return closest;\r\n};\r\n\r\n// Fonction qui va récupérer la position GPS de l'utilisateur pour ensuite lui proposer les instituts les plus proches\r\nconst getNavigatorLocation = async (successCb, errorCb) => {\r\n  const options = {\r\n    enableHighAccuracy: true,\r\n  };\r\n\r\n  return navigator.geolocation.getCurrentPosition(successCb, errorCb, options);\r\n};\r\n\r\nconst getUrlParameter = (theParameter) => {\r\n  var params = window.location.search.substring(1).split(\"&\");\r\n  for (var i = 0; i < params.length; i++) {\r\n    var p = params[i].split(\"=\");\r\n    if (p[0] === theParameter) {\r\n      return decodeURIComponent(p[1]);\r\n    }\r\n  }; return false;\r\n};\r\n\r\n// Fonction qui retourne le nom de la zone géographique associée à son \"path\"\r\nfunction findNameFor(toFind) {\r\n  const findCondition = (element) => element.path === toFind;\r\n  const matchIndex = locations.findIndex(findCondition);\r\n  return locations[matchIndex].geoZoneName;\r\n};\r\n\r\n// Fonction qui retourne le nom de la zone géographique associée à son \"path\" pour résidentiel\r\nfunction findResidentielNameFor(toFind) {\r\n  const findCondition = (element) => element.path === toFind;\r\n  const matchIndex = residentiel.findIndex(findCondition);\r\n  return residentiel[matchIndex].geoZoneName;\r\n};\r\n\r\nconst getObjectsThatIncludesInArray = (array, property, toMatch) => {\r\n  return array.filter(element => element[property].includes(toMatch));\r\n};\r\n\r\n// Fonction qui va récupérer tout les pays disponibles dans le fichier \"LOCATIONS_DATAS.js\"\r\nconst getAllCountries = () => {\r\n  const countries = locations.map(element => element.country.name);\r\n  return [...new Set(countries)]; // Important, on supprime tout les doublons\r\n};\r\n\r\n// Fonction qui va récupérer le nom d'un pays en fonction de son code ISO\r\nconst getCountryNameFromCountryCode = (countryCode) => {\r\n  const country = countriesDepthOfCoverage[countryCode];\r\n  if (country === undefined) return null;\r\n  return country.name;\r\n};\r\n\r\n// Fonction qui va récupérer toutes les zones géographiques d'un pays\r\nconst getGeoZonesForCountry = (countryName) => {\r\n  return locations.filter(element => element.country.name === countryName);\r\n};\r\n\r\n// Fonction qui va récupérer tous les lieux residentiels\r\nconst getGeoZonesForResidentiels = () => {\r\n  return residentiel;\r\n};\r\n\r\n// Fonction qui va récupérer le nom d'une zone géographique en fonction de \"la profondeur de couverture\" du pays, à partir d'un seul \"match\".\r\nconst getCorrectGeoZoneNameFromOneMatch = (match) => {\r\n  const commonCountryCode = match.country.code;\r\n  if (countriesDepthOfCoverage[commonCountryCode].depthOfCoverage === 2) {\r\n    return match.geoZoneName; // On retourne le nom de la zone géographique, ex: \"Nord-Ouest\"\r\n  } else {\r\n    return match.country.name; // On retourne le nom du pays, ex: \"France\", car la profondeur de couverture est de 1\r\n  }\r\n};\r\n\r\n// Fonction qui va récupérer tout les établissements d'un \"path\" donné.\r\n// Retourne => Le nom de la zone géographique, les données correspondantes, l'ID de la dernière entrée de cette zone, et le numéro de téléphone de l'institut associé.\r\nconst resolveLocations = async (path) => {\r\n  \r\n  if (path == undefined) {\r\n    return [\"Sarah Nacass - Visio\", \"/visio\", 0, \"0123456789\"];\r\n  }\r\n  \r\n  // On va utiliser la fonction getObjectsMatchInArray pour récupérer les éléments correspondants à la propriété \"path\"\r\n  const matchs = getObjectsThatIncludesInArray(locations, \"path\", path);\r\n  const name = getCorrectGeoZoneNameFromOneMatch(matchs[0]);\r\n  const lastPathId = matchs[matchs.length - 1].pathId; // On récupère l'ID de la dernière entrée de la zone, pour eviter les erreur du dispatcher\r\n  const phone = matchs[0].phone;\r\n\r\n  return [\"Sarah Nacass - \" + name, matchs, lastPathId, phone]; // On retourne le nom de la zone géographique et les données correspondantes\r\n};\r\n\r\nconst resolveLocationsResidentiel = async () => {\r\n  \r\n  // On va utiliser la fonction getObjectsMatchInArray pour récupérer les éléments correspondants à la propriété \"path\"\r\n  const matchs = getObjectsThatIncludesInArray(residentiel, \"path\", \"/residentiel\");\r\n  const name = matchs[0].country.name;\r\n  const lastPathId = matchs[matchs.length - 1].pathId; // On récupère l'ID de la dernière entrée de la zone, pour eviter les erreur du dispatcher\r\n  const phone = \"+33 01 76 27 82 67\";\r\n\r\n  return [\"Sarah Nacass - \" + name, matchs, lastPathId, phone]; // On retourne le nom de la zone géographique et les données correspondantes\r\n};\r\n\r\n\r\n// Fonction qui va permettre de mettre à jour un objet, en changeant la valeur d'une propriété\r\nconst updateObjectProperty = (object, setObject, selectedObjectStatement, newStatement) => {\r\n  if (selectedObjectStatement === undefined || selectedObjectStatement === null) throw new Error(\"updateObject : Entries are not strings !\");\r\n  if (selectedObjectStatement.trim() === \"\") throw new Error(\"updateObject : Entries seems empty !\");\r\n  var updatedDatas = { ...object }\r\n  updatedDatas[`${selectedObjectStatement}`] = newStatement;\r\n  return setObject(updatedDatas);\r\n};\r\n\r\n// Cette fonction va permettre de récupérer un paramètre URL \"sID\" ou \"selectedDispatcher\" (qui sont les mêmes mais de versions différentes)\r\nconst getCurrentSelectedDispatcher = (maxDispatcher) => {\r\n\r\n  const rewriteUrlParameter = (newValue) => {\r\n    const url = new URL(window.location.href);\r\n    const searchParams = new URLSearchParams(url.search);\r\n\r\n    searchParams.set(\"sID\", newValue);\r\n    searchParams.delete(\"selectedDispatcher\");\r\n    // On recharde l'URL avec les nouvelles données\r\n    window.history.replaceState({}, \"\", `${url.pathname}?${searchParams.toString()}`);\r\n    return;\r\n  };\r\n\r\n  /* Obtention du paramètre URL \"selectedDispatcher\" ou \"sID\" */\r\n  const _v_1 = getUrlParameter(\"selectedDispatcher\");\r\n  const _v_2 = getUrlParameter(\"sID\");\r\n\r\n  // _v_1 est le paramètre URL \"selectedDispatcher\" et _v_2 est le paramètre URL \"sID\", qui sont les mêmes.\r\n  // Il sont justes de versions différentes, donc si l'un des deux est inexistant, on prend l'autre\r\n  // , sinon on opte pour un comportement par défaut.\r\n  // Et on l'enregistre dans la variable \"response\"\r\n\r\n  const response = _v_1 === false ? parseInt(_v_2) : parseInt(_v_1);\r\n\r\n  // Si un des deux n'est pas à false, on réécrit l'url avec le bon paramètre \"sID\" à la place de \"selectedDispatcher\"\r\n  if (_v_2 === false && _v_1 !== false) {\r\n    rewriteUrlParameter(response);\r\n  };\r\n\r\n  /* Evaluation de la réponse */\r\n  if (isNaN(response)) return 0;\r\n  if (response > maxDispatcher || response < 0) return 0;\r\n\r\n  return response;\r\n};\r\n\r\n// Cette va récupérer la dernière réservation effectuée (enregistrée sur l'appareil de l'utilisateur)\r\n// Si elle existe, l'app affichera un message pour prévenir l'utilisateur qu'il a déjà effectué une réservation qui n'est pas encore terminée.\r\nconst checkIfAppointmentWasAlreadyMade = () => {\r\n  const lastBookingOperation = localStorage.getItem(\"last_booking_operation\");\r\n\r\n  const error = {\r\n    status: false,\r\n    datas: null,\r\n  };\r\n\r\n  // Checking if the last booking operation is not empty\r\n  if (lastBookingOperation === null || lastBookingOperation === undefined) return error;\r\n\r\n  // Return all informations about the last booking operation\r\n  const lastBookingOperationObject = JSON.parse(lastBookingOperation);\r\n\r\n  return {\r\n    status: true,\r\n    datas: lastBookingOperationObject,\r\n  };\r\n};\r\n\r\nconst checkIfAutoSelectionWasUsed = async () => {\r\n  const autoSelectionEntry = sessionStorage.getItem(\"cache-AUAADS\");\r\n  if (autoSelectionEntry === null || autoSelectionEntry === undefined) return false;\r\n  if (autoSelectionEntry === \"1\") {\r\n    sessionStorage.clear();\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// Vérifier si le rendez-vous est toujours disponnible\r\nconst checkIfAppointmentWasAlreadyAvailable = async (data) => {\r\n  try {\r\n    // Récupérer l'url API\r\n    const endpoint = isProductionEnv ? process.env.REACT_APP_PROD_POST_CHECK_TIMES : process.env.REACT_APP_DEV_POST_CHECK_TIMES;\r\n\r\n    const targetDate = new Date(data.clientSavedAtTime);\r\n    const currentDate = new Date();\r\n\r\n    // Invalider le lien de paiement si le rdv à plus de 4 jours au cabinet\r\n    if (data.typeId === 0) {\r\n      const threeDaysFromNow = new Date(targetDate);\r\n      threeDaysFromNow.setDate(targetDate.getDate() + 1);\r\n\r\n      if (threeDaysFromNow < currentDate) {\r\n        return false;\r\n      }\r\n    // Invalider le lien de paiement si le rdv à plus de 9 heures en visio\r\n    } else if (data.typeId === 1) {\r\n      const sixHoursFromNow = new Date(targetDate);\r\n      sixHoursFromNow.setHours(targetDate.getHours() + 1);\r\n\r\n      if (sixHoursFromNow < currentDate) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Variables envoyées\r\n    await axios.post(endpoint, {\r\n        \"typeId\": data.typeId,\r\n        \"isoDate\": data.isoDate,\r\n        \"appointmentTypeIdPaid\": data.appointmentTypeIdPaid, \r\n        \"calendarId\": data.calendarId,\r\n    }); \r\n    return true\r\n  } catch { return false }\r\n};\r\n\r\n// Ici on exporte toutes les fonctions sous forme de modules pour pouvoir les utiliser dans d'autres fonctions.\r\nexport { \r\n  resolveLocations, \r\n  resolveLocationsResidentiel,\r\n  getAllCountries, \r\n  getGeoZonesForCountry, \r\n  getGeoZonesForResidentiels,\r\n  checkIfAppointmentWasAlreadyMade, \r\n  findNameFor, \r\n  findResidentielNameFor,\r\n  updateObjectProperty, \r\n  getCurrentSelectedDispatcher, \r\n  getUrlParameter, \r\n  getCountryNameFromCountryCode, \r\n  filterForEach, \r\n  getNavigatorLocation,\r\n  checkIfAutoSelectionWasUsed,\r\n  checkIfAppointmentWasAlreadyAvailable,\r\n};"],"names":["_event$link","event","removeEvent","useContext","EventContext","code","setCode","useState","_jsx","className","children","_jsxs","role","icon","AlertCircle","id","title","content","link","url","href","text","placeholder","type","value","onChange","e","target","onClick","handleSubmitCode","setSecraitaireCode","GeoZoneSelector","_ref","showModal","setShowModal","includesCities","imLost","inFrame","navigate","useNavigate","queryParameters","useSearchParams","indexT","get","ready","setReady","surPlace","setSurPlace","visio","setVisio","visioExpert","setVisioExpert","residentiel","setResidentiel","positions","setPositions","residentielPositions","setResidentielPositions","currentCountry","setCurrentCountry","country","getAllCountries","toogleModal","useCallback","useEffect","currentPosition","window","location","pathname","split","result","getCountryNameFromCountryCode","tempPositions","getGeoZonesForCountry","reduce","c","_ref2","path","key","updatedPositions","Object","entries","getGeoZonesForResidentiels","_ref3","checkNavigate","redirectPath","regionName","document","createElement","setAttribute","body","appendChild","click","removeChild","indexOf","sourceParam","URLSearchParams","search","localStorage","setItem","gclidParam","dataLayer","push","undefined","createSearchParams","index","toString","browserAsBuiltInGeolocator","navigator","geolocation","modalStyle","backgroundModal","stopPropagation","src","adiosLogo","alt","ArrowLeftCircle","size","map","countryName","style","concat","Navigation","element","findNameFor","MapPin","countriesDepthOfCoverage","nameCountry","redirectVisio","namedcountry","name","findResidentielNameFor","Video","Users","Home","axios","require","deg_rad","deg","Math","PI","addDispatcherToURL","toAdd","urlParams","append","async","filterForEach","current","positionRatings","Array","locations","length","fill","forEach","position","res","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","getDistance","latitude","longitude","object","pathId","distance","region","geoZoneName","pays","ville","city","acc","loc","getNavigatorLocation","successCb","errorCb","getCurrentPosition","enableHighAccuracy","getUrlParameter","theParameter","params","substring","i","p","decodeURIComponent","toFind","matchIndex","findIndex","getObjectsThatIncludesInArray","array","property","toMatch","filter","includes","countries","Set","countryCode","resolveLocations","matchs","match","commonCountryCode","depthOfCoverage","getCorrectGeoZoneNameFromOneMatch","phone","resolveLocationsResidentiel","getCurrentSelectedDispatcher","maxDispatcher","_v_1","_v_2","response","parseInt","newValue","URL","searchParams","set","delete","history","replaceState","rewriteUrlParameter","isNaN","checkIfAppointmentWasAlreadyMade","lastBookingOperation","getItem","status","datas","JSON","parse","checkIfAppointmentWasAlreadyAvailable","endpoint","process","targetDate","Date","data","clientSavedAtTime","currentDate","typeId","threeDaysFromNow","setDate","getDate","sixHoursFromNow","setHours","getHours","post","isoDate","appointmentTypeIdPaid","calendarId"],"sourceRoot":""}