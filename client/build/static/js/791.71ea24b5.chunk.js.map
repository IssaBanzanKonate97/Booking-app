{"version":3,"file":"static/js/791.71ea24b5.chunk.js","mappings":"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","sources":["components/Map/index.jsx","components/GlobalInformations.jsx","components/LocationsSelection.jsx","pages/commons/BUILDER_RESIDENTIEL.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet'\r\n\r\nconst LeafletMap = ({ latitude, longitude, name }) => {\r\n    const position = [latitude, longitude];\r\n\r\n    return <div key={`${ latitude }-${ longitude }`} className=\"h-full overflow-hidden relative z-10 bg-portal-400 w-full h-full\">\r\n        <MapContainer center={position} zoom={14} scrollWheelZoom={false} className=\"absolute inset-0 h-full w-full\">\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>\r\n                    { name } \r\n                </Popup>\r\n            </Marker>\r\n        </MapContainer>\r\n    </div>\r\n};\r\n\r\nexport default LeafletMap;","import React, { useContext } from \"react\";\r\nimport { MapPin } from \"react-feather\";\r\nimport \"./GlobalInformations.css\";\r\n// import { STATE } from \"../pages/models/STATE_DATAS\";\r\nimport { DatasContext } from \"../pages/commons/contexts\";\r\n\r\n// Import Map\r\nimport LeafletMap from \"./Map\";\r\n\r\nexport default function GlobalInformations() {\r\n  const iconSize = 19;\r\n  const titleClassStyle = \"font-bold text-sm text-gray-600\";\r\n  const textClassStyle = \"text-sm text-gray-600\";\r\n\r\n  /* Destructuring des données de localisation des établissements */\r\n  const { selected, localEtabValues, phoneToCall } = useContext(DatasContext);\r\n  const { name, address, accessMethods, parkingAccess, othersInfos, imageUri, latitude, longitude } = localEtabValues[selected];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-12 bg-white shadow shadow-gray-200 md:rounded-md overflow-hidden transition-all duration-300\">\r\n\r\n      <div className=\"flex col-span-1 lg:col-span-7\">\r\n        <div className=\"cardIcon py-4 flex justify-center\"><MapPin size={iconSize} /></div>\r\n        <div className=\"w-full\">\r\n          <h3 className=\"cardTitle md:block my-4 text-gray-600 font-medium montserrat\">Carte et informations d'accès</h3>\r\n\r\n          <div className=\"md:pr-12 md:px-0 roboto\">\r\n\r\n            <div className=\"flex flex-col md:px-0 mb-3\">\r\n              <div className=\"globalInformationsInfos\">\r\n                <h3 className={titleClassStyle}>{name}</h3>\r\n                {/* <p className={textClassStyle}>{address}</p> */}\r\n              </div>\r\n              {accessMethods !== null && <div className=\"globalInformationsInfos\">\r\n                <h3 className={titleClassStyle}>Moyens de transport</h3>\r\n                <p className={textClassStyle}>{accessMethods}</p>\r\n              </div>\r\n              }\r\n              {parkingAccess !== null && <div className=\"globalInformationsInfos\">\r\n                <h3 className={titleClassStyle}>Parking public</h3>\r\n                <p className={textClassStyle}>{parkingAccess}</p>\r\n              </div>\r\n              }\r\n              {othersInfos !== null &&\r\n                <div className=\"globalInformationsInfos\">\r\n                  <h3 className={titleClassStyle}>Informations pratiques</h3>\r\n                  <p className={textClassStyle}>{othersInfos}</p>\r\n                </div>\r\n              }\r\n              {phoneToCall.number !== null && <div className=\"globalInformationsInfos\">\r\n                <h3 className={titleClassStyle}>Contact conseillère</h3>\r\n                <a href={`tel:${phoneToCall.number}`}>\r\n                  <p className=\"text-fusion-500 text-sm\">{phoneToCall.number}</p>\r\n                </a>\r\n              </div>\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"h-64 lg:h-full col-span-1 lg:col-span-5\">\r\n\r\n        <LeafletMap latitude={latitude} longitude={longitude} name={name} />\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./locations_selection.scss\";\r\n\r\n/* === LocationsSelection permet d'afficher les boutons de sélection des établissements, par rapport à la liste des établissements passée en props === */\r\nconst selectedStyle = \"chooseButtonBox my-1 font-medium border-solid border-2 border-slate-700 text-white text-sm bg-slate-700 hover:cursor-pointer hover:bg-slate-600 duration-150\";\r\nconst notSelectedStyle = \"chooseButtonBox my-1 font-medium text-slate-700 text-sm hover:cursor-pointer duration-150 border-solid border-2 border-slate-700\";\r\n\r\nexport default function LocationsSelection({ selected, setSelected, locations, setPhoneToCall }){\r\n\r\n    const selectedLocationName = locations[selected].name;\r\n    // setPhoneToCall(locations[selected].phone);\r\n    useEffect(() => {\r\n        setPhoneToCall(locations[selected].phone);\r\n    }, [selected, locations, setPhoneToCall]);\r\n\r\n    const handleSelection = (locationPathId) => {\r\n\r\n        setSelected(locationPathId);\r\n        setPhoneToCall(locations[locationPathId].phone);\r\n    };\r\n\r\n    return <div className=\"w-full relative overflow-hidden bg-white mb-4 px-5 py-2 flex flex-col roboto shadow shadow-slate-200 md:rounded-md\">\r\n            <div className=\"left-border bg-portal-400\"></div>\r\n\r\n            <div className=\"flex-col text-left font-medium text-sm md:text-base py-2 ml-1 text-slate-700 montserrat\">\r\n                Sélectionnez un établissement : \r\n                <p className=\"text-xs py-1\"> \r\n                    Sélectionné : { selectedLocationName }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"flex flex-row pb-2 flex-wrap\">\r\n                {\r\n                    locations.map(({ pathId, city }, index) => (\r\n                        <button\r\n                            key={ index } \r\n                            onClick={() => handleSelection(pathId)}\r\n                            className={ selected === pathId ? selectedStyle : notSelectedStyle }>\r\n                                { city }\r\n                        </button>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n};","import React, { Fragment, useCallback, useContext, useEffect, useRef, useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport LocationsSelection from \"../../components/LocationsSelection\";\r\nimport GeoZoneSelector from \"./GEO_ZONE_POP\";\r\n// import ChooseVideoAlert from \"../../components/ChooseVideoAlert\";\r\n// import Footer from \"./components/Footer\";\r\nimport { AlignLeft, ArrowRight, Clock } from \"react-feather\";\r\n\r\n/* Import des fonctions utilitaires */\r\nimport {\r\n  checkIfAppointmentWasAlreadyAvailable,\r\n  checkIfAppointmentWasAlreadyMade,\r\n  getCurrentSelectedDispatcher,\r\n  resolveLocationsResidentiel,\r\n} from \"../models/FUNCTIONS_DISPATCHER\";\r\n\r\nimport { STATE } from \"../models/STATE_DATAS\";\r\n\r\n/* Import du contexte pour les données */\r\nimport { DatasContext } from \"./contexts\";\r\n\r\nimport GlobalInformations from \"../../components/GlobalInformations\";\r\nimport Horaire from \"../../components/Horaire\";\r\nimport Presentation from \"../../components/Presentation\";\r\nimport RdvUpdate from \"../../components/Reservations/RdvUpdate\";\r\nimport Video from \"../../components/Video\";\r\n\r\nimport EventDisplayer from \"../../components/EventDisplayer\";\r\nimport { EventContext } from \"../../contexts/EventContext\";\r\n\r\nimport moment from \"moment\";\r\n\r\n/* =============================================================== */\r\n\r\nexport default function Builder({ resolve }) {\r\n  /* On défini ici les props envoyés par les composants parents concernées : ../shared_geo_zone/XXX.jsx */\r\n  const rdvComponentRef = useRef();\r\n  const [selected, setSelected] = useState(null);\r\n  const [localEtabName, setLocalEtabName] = useState(false);\r\n  const [localEtabValues, setLocalEtabValues] = useState(false);\r\n  const [phoneToCall, setPhoneToCall] = useState(\"\");\r\n  const [dispatcherCheck, setDispatcherCheck] = useState(0);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [openReservationModal, setReservationModalStatement] = useState(false);\r\n  const [showModal, setShowModal] = useState([false, false]);\r\n\r\n  const [secraitaireCode, setSecraitaireCode] = useState('');\r\n\r\n  const { createEvent } = useContext(EventContext);\r\n\r\n  // Ce UE se lancera une seule fois, il nous permettera de modifier setScreenWidth en fonction de la taille de l'écran\r\n  useEffect(() => {\r\n    if(window.innerWidth <= STATE.SCREEN.MD) {\r\n      setScreenWidth('small');\r\n    } else {\r\n      setScreenWidth('wide');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getLocations = async () => {\r\n      const locations = await resolveLocationsResidentiel();\r\n\r\n      setLocalEtabName(locations[0]);\r\n      setLocalEtabValues(locations[1]);\r\n      setDispatcherCheck(locations[2]);\r\n      setPhoneToCall(locations[3]);\r\n    };\r\n\r\n    getLocations();\r\n  }, [resolve]);\r\n\r\n  useEffect(() => {\r\n    // Select automatically the location linked to the sID parameter\r\n    const selectedResult = getCurrentSelectedDispatcher(dispatcherCheck);\r\n    return setSelected(selectedResult);\r\n  }, [dispatcherCheck]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // On vérifie si l'utilisateur actuel à déjà pris un rendez-vous, mais n'a pas encore finaliser/payer sa réservation\r\n      // Si c'est le cas, on ajoute une alerte pour lui proposer de compléter le processus de paiement.\r\n      const last_booking_informations = checkIfAppointmentWasAlreadyMade();\r\n      const { status, datas } = last_booking_informations;\r\n      if (status === false) return; // Si l'utilisateur n'a pas de réservation en cours, on ne fait rien.\r\n\r\n      // On vérifie si le créneau selectionné est déjà réservé\r\n      const available = await checkIfAppointmentWasAlreadyAvailable(last_booking_informations.datas.informations);\r\n      if (available === false) return; // Si l'utilisateur n'a pas de réservation en cours, on ne fait rien.\r\n\r\n      const { informations, redirection_checkout_url } = datas;\r\n      const { identity, isoDate, type, typeId, address, clientSavedAtTime } = informations;\r\n      const { firstName, lastName } = identity;\r\n\r\n      const title = `${ firstName }, vous avez oublié de régler votre réservation (${ type })`;\r\n      const content = `\r\n        Vous avez pris une réservation depuis cette appareil ${ moment(clientSavedAtTime).fromNow() }, qui n\\'a pas été réglée. \r\n        Au nom de : ${ firstName } ${ lastName }, prévu pour le ${ moment(isoDate).format('DD/MM/YYYY [à] hh:mm') }, ${ typeId === 0 ? `au cabinet Sarah Nacass situé : ${ address }` : `en visioconférence` }.\r\n        Si vous souhaitez valider votre réservation, vous pouvez le faire en cliquant sur le bouton ci-dessous, vous serez redirigé vers notre page de paiement sécurisée.\r\n      `;\r\n      const timeOut = 4 * 60 * 1000; // Après 4 minutes, l'alerte disparaitra automatiquement.\r\n      const icon = null;\r\n      const link = {\r\n        text: \"Procéder au paiement de ma réservation\",\r\n        url: redirection_checkout_url,\r\n      }\r\n\r\n      const new_event = {\r\n        title, content, timeOut, icon, link\r\n      };\r\n\r\n      if (status && available) {\r\n        // On envoi un message au travers du contexte \"EventContext\" pour afficher une alerte dnas le composant \"EventDisplayer\", qui se trouve ici dans le Builder.\r\n        return createEvent(new_event);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const toogleLocationsModal = useCallback(() => {\r\n    if(showModal[0] === false) {\r\n      setShowModal([true, true]); // Used to includes cities in the modal\r\n    } else {\r\n      setShowModal([false, false]);\r\n    }\r\n  }, [showModal]);\r\n\r\n  const bodyComponents = [ /* Certains composants en commentaire sont rendus différement à cause de leurs disposition d'affichage */\r\n    /*{id: 0, component: <GoogleMap />, title: \"Carte et informations d'accès\", icon: <MapPin size={iconSize} />},*/\r\n    { component: <Presentation />, title: \"Présentation de l'établissement\", icon: <AlignLeft size={19} /> },\r\n    { component: <Horaire />, title: \"Secrétariat\", icon: <Clock size={19} /> },\r\n  ];\r\n\r\n  /* Fonction pour permuter l'affichage de la fenêtre de réservation */\r\n  function toogleReservationModal(){\r\n    return setReservationModalStatement(!openReservationModal);\r\n  }\r\n\r\n  /* Hook d'effet + Variable, pour écouter dynamiquement la taille (largeur) de l'écran */\r\n  const getDimension = () => {\r\n    if (window.innerWidth >= STATE.SCREEN.MD) {\r\n      setReservationModalStatement(false)\r\n      return setScreenWidth(\"wide\");\r\n    } else {\r\n      return setScreenWidth(\"small\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', getDimension);\r\n    return(() => {\r\n        /* Fonction de nettoyage => */ \r\n        window.removeEventListener('resize', getDimension);\r\n    })\r\n  }, [screenWidth]);\r\n\r\n  // Ce hook permet de changer le titre de la page en fonction de l'établissement sélectionné\r\n  useEffect(() => {\r\n    document.title = `Cabinets Sarah Nacass - Résidentiel`;\r\n  }, [localEtabName]);\r\n  \r\n  const handleCheatCode = useCallback(async () => {\r\n\r\n    const title = `Connexion secrétaire`;\r\n    const content = `\r\n      Veuillez entrer votre code confidentiel dans le champ ci-dessous\r\n    `;\r\n    const timeOut = 4 * 60 * 1000;\r\n    const icon = null;\r\n    const code = {\r\n      text: \"Code confidentiel\",\r\n      type: 'text',\r\n      id: 'code_confidentiel',\r\n      setSecraitaireCode\r\n    };\r\n\r\n    const new_event = {\r\n      title, content, timeOut, icon, code\r\n    };\r\n    return createEvent(new_event);\r\n  }, []);\r\n\r\n  return (\r\n    <DatasContext.Provider value={{ \r\n      selected,\r\n      phoneToCall,\r\n      localEtabValues,\r\n    }}>\r\n    \r\n    <EventDisplayer />\r\n\r\n    { selected !== null && localEtabValues !== false ? \r\n      <Fragment>\r\n        <GeoZoneSelector showModal={showModal} setShowModal={setShowModal} setSelected={setSelected} />\r\n        <div className=\"App bg-slate-200\" style={{ minHeight: \"140vh\" }}>\r\n          <Header localEtabName=\"Cabinets Sarah Nacass - Résidentiel > Programme résidentiel anti-addiction\"> </Header>\r\n          <div className=\"maxTabSize flex flex-row justify-center md:px-3 monserrat\" style={{ display: \"flex\" }}>\r\n            <div className=\"sideInformationsContainer md:mr-4 openingActionsContainersAnimation\" \r\n                style={{ display: openReservationModal ? \"none\" : \"block\" }}>\r\n                {/*ChooseVideoAlert localEtabName={localEtabName} /> */}\r\n                <LocationsSelection \r\n                  localEtabName={localEtabName} \r\n                  locations={localEtabValues} \r\n                  selected={selected} \r\n                  setSelected={setSelected} \r\n                  setPhoneToCall={setPhoneToCall}\r\n                />\r\n\r\n                <GlobalInformations />\r\n\r\n                <Video />\r\n                {\r\n                  /* -- Mapping des objets du tableau (2 à 4) -- */\r\n                  bodyComponents.map((component, index) => {\r\n                    return (<div key={index}>\r\n                      <div className=\"flex flex-row bg-white my-4 py-4 shadow shadow-gray-200 md:rounded-md\">\r\n                        <div className=\"cardIcon h-full flex items-center justify-center\">{component.icon}</div>\r\n                        <div className=\"w-full\">\r\n                          <h3 className=\"cardTitle text-gray-600 font-medium montserrat\">{component.title}</h3>\r\n                          {component.component}\r\n                        </div>\r\n                      </div>\r\n                    </div>);\r\n                  })\r\n                }\r\n              </div>\r\n              {/* -- RDV COMPONENT -- */}\r\n              <div className=\"min-w-max flex-col relative\" style={{ display: screenWidth !== \"small\" ? \"flex\" : openReservationModal ? \"flex\" : \"none\" }}>\r\n                  {/* {console.log(localEtabValues[selected])} */}\r\n                  <RdvUpdate \r\n                    ref={rdvComponentRef}\r\n                    toogleLocationsModal={toogleLocationsModal}\r\n                    showCloseIconAutorization={ screenWidth === \"small\" ? true : false }\r\n                    selectedAddress={localEtabValues[selected].address}\r\n                    weekEndAvailability={localEtabValues[selected].weekEndAvailability}\r\n                    appointmentTypeIdPaid={localEtabValues[selected].appointmentTypeIdPaid}\r\n                    calendarId={localEtabValues[selected].calendarId}\r\n                    city={localEtabValues[selected].city}\r\n                    residentiel={true}\r\n                    tarif={{value: 0, currency: 'eur', symbol: '€'}}\r\n                    idLocation={localEtabValues[selected].idLocation}\r\n                    appointmentTypeIdNotPaid={localEtabValues[selected].appointmentTypeIdPaid} // (Eviter erreur dues au fait qu'il n'y a pas de page de paiement)\r\n                    acuityAPI={localEtabValues[selected].acuityAPI}\r\n                    acuityAddress={localEtabValues[selected].acuityAddress}\r\n                    available={localEtabValues[selected].available ?? 1}\r\n                    closeModalCallTunnel={setReservationModalStatement}\r\n                    startTimestamp={Date.now()}\r\n                    cheatCode={handleCheatCode}\r\n                    cheatCodeValue={secraitaireCode}\r\n                  />\r\n              </div>\r\n              {/* -- RESPONSIVE CTA BUTTON -- */}\r\n              {\r\n                screenWidth === \"small\" && !openReservationModal ?\r\n                <div className=\"getNewReservation flex items-center hover:cursor-pointer z-20\r\n                bg-gradient-to-r from-fusion-700 to-portal-500 text-white font-bold montserrat shadow-2xl px-9 py-3 hover:bg-blue-600 duration-150\" \r\n                onClick={() => {\r\n                  /* SCROLLING TO THE TOP OF THE PAGE WHILE OPENING MODAL */\r\n                  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                  toogleReservationModal();\r\n                  // APPEL DE LA FONCTION DU COMPOSANT ENFANT (RDV)\r\n                  rdvComponentRef.current.toogleAutoScopeRef(\"run\")\r\n                  // Un faux equivalent de : toogleAutoScope(\"run\");\r\n                  /*\r\n                  mixpanel.track('Prendre un rendez-vous', {\r\n                    'screen' : 'isSmallScreen',\r\n                    'isClicked' : true\r\n                  });\r\n                  */\r\n                }}>\r\n                  <div className=\"flex flex-row justify-between items-center\">\r\n                    <div className=\"flex flex-col mr-8\">\r\n                      <span>Prenez rendez-vous</span>\r\n                      <span className=\"text-xs font-normal\">avec un spécialiste près de chez vous</span>\r\n                    </div>\r\n                    <ArrowRight size={20} strokeWidth={3} className=\"arrowRightAnimation\"/>\r\n                  </div>\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n          </div>\r\n          {/* <Footer></Footer> */}\r\n          { !openReservationModal && <div className=\"bg-gradient-to-b h-36 from-slate-200 to-slate-300\">\r\n            <div className=\"flex flex-row border-b-4 border-solid border-portal-400 -mb-7\r\n            justify-center items-center h-full roboto text-slate-500 text-sm font-bold\">\r\n              Cabinets Sarah Nacass — rdv.sarahnacass.com © { new Date().getFullYear() }\r\n            </div>\r\n          </div> }\r\n        </div>\r\n        </Fragment>\r\n        :\r\n        <Loading />\r\n      }\r\n    </DatasContext.Provider>\r\n  );\r\n};\r\n\r\n// OLD APP BG STYLE (SAME): {background: \"#eef2f7\"}"],"names":["_ref","latitude","longitude","name","position","_jsx","className","children","_jsxs","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","concat","GlobalInformations","titleClassStyle","textClassStyle","selected","localEtabValues","phoneToCall","useContext","DatasContext","address","accessMethods","parkingAccess","othersInfos","imageUri","MapPin","size","number","href","LeafletMap","selectedStyle","notSelectedStyle","LocationsSelection","setSelected","locations","setPhoneToCall","selectedLocationName","useEffect","phone","map","_ref2","index","pathId","city","onClick","handleSelection","locationPathId","Builder","_localEtabValues$sele","resolve","rdvComponentRef","useRef","useState","localEtabName","setLocalEtabName","setLocalEtabValues","dispatcherCheck","setDispatcherCheck","screenWidth","setScreenWidth","window","innerWidth","openReservationModal","setReservationModalStatement","showModal","setShowModal","secraitaireCode","setSecraitaireCode","createEvent","EventContext","STATE","SCREEN","MD","async","resolveLocationsResidentiel","getLocations","selectedResult","getCurrentSelectedDispatcher","last_booking_informations","checkIfAppointmentWasAlreadyMade","status","datas","available","checkIfAppointmentWasAlreadyAvailable","informations","redirection_checkout_url","identity","isoDate","type","typeId","clientSavedAtTime","firstName","lastName","title","content","moment","fromNow","format","timeOut","icon","link","text","toogleLocationsModal","useCallback","bodyComponents","component","Presentation","AlignLeft","Horaire","Clock","getDimension","addEventListener","removeEventListener","document","handleCheatCode","code","id","Provider","value","EventDisplayer","Fragment","GeoZoneSelector","style","minHeight","Header","display","Video","RdvUpdate","ref","showCloseIconAutorization","selectedAddress","weekEndAvailability","appointmentTypeIdPaid","calendarId","residentiel","tarif","currency","symbol","idLocation","appointmentTypeIdNotPaid","acuityAPI","acuityAddress","closeModalCallTunnel","startTimestamp","Date","now","cheatCode","cheatCodeValue","scrollTo","top","behavior","current","toogleAutoScopeRef","ArrowRight","strokeWidth","getFullYear","Loading"],"sourceRoot":""}