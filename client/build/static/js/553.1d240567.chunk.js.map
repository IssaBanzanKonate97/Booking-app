{"version":3,"file":"static/js/553.1d240567.chunk.js","mappings":"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","sources":["pages/commons/BUILDER_VISIO.jsx"],"sourcesContent":["import \"../../App.css\";\r\nimport Loading from \"../../components/Loading\";\r\nimport React, { useState, useEffect, useRef, useCallback, Fragment, useContext } from \"react\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport GeoZoneSelector from \"./GEO_ZONE_POP\";\r\nimport { AlignLeft, ArrowRight, Clock } from \"react-feather\";\r\n\r\n/* Import des fonctions utilitaires */\r\nimport {\r\n  resolveLocations, \r\n  getCurrentSelectedDispatcher, \r\n  checkIfAppointmentWasAlreadyMade,\r\n  checkIfAppointmentWasAlreadyAvailable,\r\n} from \"../models/FUNCTIONS_DISPATCHER\";\r\n\r\nimport { STATE } from \"../models/STATE_DATAS\";\r\n\r\n/* Import du contexte pour les données */\r\nimport { DatasContext } from \"./contexts\";\r\n\r\nimport Presentation from \"../../components/Presentation\";\r\nimport Video from \"../../components/Video\";\r\nimport RdvUpdate from \"../../components/Reservations/RdvUpdate\";\r\nimport Horaire from \"../../components/Horaire\";\r\n\r\nimport EventDisplayer from \"../../components/EventDisplayer\";\r\nimport { EventContext } from \"../../contexts/EventContext\";\r\n\r\nimport moment from \"moment\";\r\n\r\n/* =============================================================== */\r\n\r\nexport default function Builder({ resolve }) {\r\n  /* On défini ici les props envoyés par les composants parents concernées : ../shared_geo_zone/XXX.jsx */\r\n  const rdvComponentRef = useRef();\r\n  const [selected, setSelected] = useState(null);\r\n  const [localEtabName, setLocalEtabName] = useState(false);\r\n  const [localEtabValues, setLocalEtabValues] = useState(false);\r\n  const [phoneToCall, setPhoneToCall] = useState(\"\");\r\n  const [dispatcherCheck, setDispatcherCheck] = useState(0);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [openReservationModal, setReservationModalStatement] = useState(false);\r\n  const [showModal, setShowModal] = useState([false, false]);\r\n\r\n  const [secraitaireCode, setSecraitaireCode] = useState('');\r\n\r\n  const { createEvent } = useContext(EventContext);\r\n\r\n  // Ce UE se lancera une seule fois, il nous permettera de modifier setScreenWidth en fonction de la taille de l'écran\r\n  useEffect(() => {\r\n    if(window.innerWidth <= STATE.SCREEN.MD) {\r\n      setScreenWidth('small');\r\n    } else {\r\n      setScreenWidth('wide');\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getLocations = async () => {\r\n      const locations = await resolveLocations(resolve);\r\n\r\n      setLocalEtabName(locations[0]);\r\n      setLocalEtabValues(locations[1]);\r\n      setDispatcherCheck(locations[2]);\r\n      setPhoneToCall(locations[3]);\r\n    };\r\n\r\n    getLocations();\r\n  }, [resolve]);\r\n\r\n  useEffect(() => {\r\n    // Select automatically the location linked to the sID parameter\r\n    const selectedResult = getCurrentSelectedDispatcher(dispatcherCheck);\r\n    return setSelected(selectedResult);\r\n  }, [dispatcherCheck]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // On vérifie si l'utilisateur actuel à déjà pris un rendez-vous, mais n'a pas encore finaliser/payer sa réservation\r\n      // Si c'est le cas, on ajoute une alerte pour lui proposer de compléter le processus de paiement.\r\n      const last_booking_informations = checkIfAppointmentWasAlreadyMade();\r\n      const { status, datas } = last_booking_informations;\r\n      if (status === false) return; // Si l'utilisateur n'a pas de réservation en cours, on ne fait rien.\r\n\r\n      // On vérifie si le créneau selectionné est déjà réservé\r\n      const available = await checkIfAppointmentWasAlreadyAvailable(last_booking_informations.datas.informations);\r\n      if (available === false) return; // Si l'utilisateur n'a pas de réservation en cours, on ne fait rien.\r\n\r\n      const { informations, redirection_checkout_url } = datas;\r\n      const { identity, isoDate, type, typeId, address, clientSavedAtTime } = informations;\r\n      const { firstName, lastName } = identity;\r\n\r\n      const title = `${ firstName }, vous avez oublié de régler votre réservation (${ type })`;\r\n      const content = `\r\n        Vous avez pris une réservation depuis cette appareil ${ moment(clientSavedAtTime).fromNow() }, qui n\\'a pas été réglée. \r\n        Au nom de : ${ firstName } ${ lastName }, prévu pour le ${ moment(isoDate).format('DD/MM/YYYY [à] hh:mm') }, ${ typeId === 0 ? `au cabinet Sarah Nacass situé : ${ address }` : `en visioconférence` }.\r\n        Si vous souhaitez valider votre réservation, vous pouvez le faire en cliquant sur le bouton ci-dessous, vous serez redirigé vers notre page de paiement sécurisée.\r\n      `;\r\n      const timeOut = 4 * 60 * 1000; // Après 4 minutes, l'alerte disparaitra automatiquement.\r\n      const icon = null;\r\n      const link = {\r\n        text: \"Procéder au paiement de ma réservation\",\r\n        url: redirection_checkout_url,\r\n      }\r\n\r\n      const new_event = {\r\n        title, content, timeOut, icon, link\r\n      };\r\n\r\n      if (status && available) {\r\n        // On envoi un message au travers du contexte \"EventContext\" pour afficher une alerte dnas le composant \"EventDisplayer\", qui se trouve ici dans le Builder.\r\n        return createEvent(new_event);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const toogleLocationsModal = useCallback(() => {\r\n    if(showModal[0] === false) {\r\n      setShowModal([true, true]); // Used to includes cities in the modal\r\n    } else {\r\n      setShowModal([false, false]);\r\n    }\r\n  }, [showModal]);\r\n\r\n  /* Fonction pour permuter l'affichage de la fenêtre de réservation */\r\n  function toogleReservationModal(){\r\n    return setReservationModalStatement(!openReservationModal);\r\n  }\r\n\r\n  /* Hook d'effet + Variable, pour écouter dynamiquement la taille (largeur) de l'écran */\r\n  const getDimension = () => {\r\n    if (window.innerWidth >= STATE.SCREEN.MD) {\r\n      setReservationModalStatement(false)\r\n      return setScreenWidth(\"wide\");\r\n    } else {\r\n      return setScreenWidth(\"small\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', getDimension);\r\n    return(() => {\r\n        window.removeEventListener('resize', getDimension);\r\n    })\r\n  }, [screenWidth]);\r\n\r\n  // Ce hook permet de changer le titre de la page en fonction de l'établissement sélectionné\r\n  useEffect(() => {\r\n    if (localEtabName === false) return;\r\n    document.title = `${ localEtabName }`;\r\n  }, [localEtabName]);\r\n\r\n  const handleCheatCode = useCallback(async () => {\r\n\r\n    const title = `Connexion secrétaire`;\r\n    const content = `\r\n      Veuillez entrer votre code confidentiel dans le champ ci-dessous\r\n    `;\r\n    const timeOut = 4 * 60 * 1000;\r\n    const icon = null;\r\n    const code = {\r\n      text: \"Code confidentiel\",\r\n      type: 'text',\r\n      id: 'code_confidentiel',\r\n      setSecraitaireCode\r\n    };\r\n\r\n    const new_event = {\r\n      title, content, timeOut, icon, code\r\n    };\r\n    return createEvent(new_event);\r\n  }, []);\r\n\r\n  return (\r\n    <DatasContext.Provider value={{ phoneToCall }}>\r\n    \r\n      <EventDisplayer />\r\n\r\n      { selected !== null && localEtabValues !== false && localEtabName !== false ? \r\n        <Fragment>\r\n          <GeoZoneSelector showModal={showModal} setShowModal={setShowModal} setSelected={setSelected} />\r\n          <div className=\"App bg-slate-200\" style={{ minHeight: \"140vh\" }}>\r\n            <Header localEtabName={localEtabName}> </Header>\r\n            <div className=\"maxTabSize flex flex-row justify-center md:px-3 monserrat\" style={{ display: \"flex\" }}>\r\n              <div className=\"sideInformationsContainer md:mr-4 openingActionsContainersAnimation\" style={{ display: openReservationModal ? \"none\" : \"block\" }}>\r\n                <div>\r\n                  <div className=\"flex flex-row bg-white my-4 py-4 shadow shadow-gray-200 md:rounded-md\">\r\n                    <div className=\"cardIcon h-full flex items-center justify-center\"><AlignLeft size={19} /></div>\r\n                    <div className=\"w-full\">\r\n                      <h3 className=\"cardTitle text-gray-600 font-medium montserrat\">Présentation des cabinets Sarah Nacass</h3>\r\n                      <Presentation />\r\n                    </div>\r\n                  </div>\r\n                  {/*<Video />*/}\r\n                  <div className=\"flex flex-row bg-white my-4 py-4 shadow shadow-gray-200 md:rounded-md\">\r\n                    <div className=\"cardIcon h-full flex items-center justify-center\"><Clock size={19} /></div>\r\n                    <div className=\"w-full\">\r\n                      <h3 className=\"cardTitle text-gray-600 font-medium montserrat\">Secrétariat</h3>\r\n                      <Horaire />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* -- RDV COMPONENT -- */}\r\n              <div className=\"min-w-max flex-col relative\" style={{ display: screenWidth !== \"small\" ? \"flex\" : openReservationModal ? \"flex\" : \"none\" }}>\r\n                  <RdvUpdate \r\n                    ref={rdvComponentRef}\r\n                    toogleLocationsModal={toogleLocationsModal}\r\n                    closeModalCallTunnel={setReservationModalStatement}\r\n                    startTimestamp={Date.now()}\r\n                    showCloseIconAutorization={ screenWidth === \"small\" ? true : false }\r\n                    city=\"Visio\"\r\n                    visio={true}\r\n                    visioFormation={true}\r\n                    tarif={{value: null, currency: null, symbol: null}}\r\n                    cheatCode={handleCheatCode}\r\n                    cheatCodeValue={secraitaireCode}\r\n                  />\r\n              </div>\r\n              {/* -- RESPONSIVE CTA BUTTON -- */}\r\n              {\r\n                screenWidth === \"small\" && !openReservationModal ?\r\n                <div className=\"getNewReservation flex items-center hover:cursor-pointer z-20\r\n                  bg-gradient-to-r from-fusion-700 to-portal-500 text-white font-bold montserrat shadow-2xl px-9 py-3 hover:bg-blue-600 duration-150\" \r\n                  onClick={() => {\r\n                    /* SCROLLING TO THE TOP OF THE PAGE WHILE OPENING MODAL */\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                    toogleReservationModal();\r\n                    // APPEL DE LA FONCTION DU COMPOSANT ENFANT (RDV)\r\n                    rdvComponentRef.current.toogleAutoScopeRef(\"run\")\r\n                    // Un faux equivalent de : toogleAutoScope(\"run\");\r\n                    /*\r\n                    mixpanel.track('Prendre un rendez-vous', {\r\n                      'screen' : 'isSmallScreen',\r\n                      'isClicked' : true\r\n                    });\r\n                    */\r\n                  }}>\r\n                  <div className=\"flex flex-row justify-between items-center\">\r\n                    <div className=\"flex flex-col mr-8\">\r\n                      <span>Prenez rendez-vous</span>\r\n                      <span className=\"text-xs font-normal\">avec un spécialiste près de chez vous</span>\r\n                    </div>\r\n                    <ArrowRight size={20} strokeWidth={3} className=\"arrowRightAnimation\"/>\r\n                  </div>\r\n                </div>\r\n                  :\r\n                  null\r\n                }\r\n              </div>\r\n            {/* <Footer></Footer> */}\r\n            { !openReservationModal && <div className=\"bg-gradient-to-b h-36 from-slate-200 to-slate-300\">\r\n              <div className=\"flex flex-row border-b-4 border-solid border-portal-400 -mb-7\r\n              justify-center items-center h-full roboto text-slate-500 text-sm font-bold\">\r\n                Sarah Nacass — rdv.sarahnacass.com © { new Date().getFullYear() }\r\n              </div>\r\n            </div> }\r\n          </div>\r\n        </Fragment> : <Loading />\r\n      }\r\n    </DatasContext.Provider>\r\n  );\r\n};"],"names":["Builder","_ref","resolve","rdvComponentRef","useRef","selected","setSelected","useState","localEtabName","setLocalEtabName","localEtabValues","setLocalEtabValues","phoneToCall","setPhoneToCall","dispatcherCheck","setDispatcherCheck","screenWidth","setScreenWidth","window","innerWidth","openReservationModal","setReservationModalStatement","showModal","setShowModal","secraitaireCode","setSecraitaireCode","createEvent","useContext","EventContext","useEffect","STATE","SCREEN","MD","async","locations","resolveLocations","getLocations","selectedResult","getCurrentSelectedDispatcher","last_booking_informations","checkIfAppointmentWasAlreadyMade","status","datas","available","checkIfAppointmentWasAlreadyAvailable","informations","redirection_checkout_url","identity","isoDate","type","typeId","address","clientSavedAtTime","firstName","lastName","title","concat","content","moment","fromNow","format","timeOut","icon","link","text","url","toogleLocationsModal","useCallback","getDimension","addEventListener","removeEventListener","document","handleCheatCode","code","id","_jsxs","DatasContext","Provider","value","children","_jsx","EventDisplayer","Fragment","GeoZoneSelector","className","style","minHeight","Header","display","AlignLeft","size","Presentation","Clock","Horaire","RdvUpdate","ref","closeModalCallTunnel","startTimestamp","Date","now","showCloseIconAutorization","city","visio","visioFormation","tarif","currency","symbol","cheatCode","cheatCodeValue","onClick","scrollTo","top","behavior","current","toogleAutoScopeRef","ArrowRight","strokeWidth","getFullYear","Loading"],"sourceRoot":""}